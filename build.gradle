/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    sourceSets {
        main.java.srcDirs = ['src/main/java']
        test.java.srcDirs = ['src/test/java']
    }
}

project(':core') {
    dependencies {
        implementation fileTree(dir: '../lib', include: ['*.jar'])

        testImplementation 'junit:junit:4.13'
        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'
    }
}

project(':backend') {
    dependencies {
        implementation fileTree(dir: '../lib', include: ['*.jar'])
        implementation project(':core')

        testImplementation 'junit:junit:4.13'
        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'
    }

    task execute(type:JavaExec) {
        main = project.hasProperty("mainClass") ? getProperty("mainClass") : "NULL"
        classpath = sourceSets.main.runtimeClasspath
    }
}

project(':frontend') {
    dependencies {
        implementation fileTree(dir: '../lib', include: ['*.jar'])
        implementation project(':core')

        testImplementation 'junit:junit:4.13'
        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'
    }

    task execute(type:JavaExec) {
        main = project.hasProperty("mainClass") ? getProperty("mainClass") : "NULL"
        classpath = sourceSets.main.runtimeClasspath
    }
}